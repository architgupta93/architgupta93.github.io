<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8; width=device-width" />
<title>Research Experience</title>
<link href="../style.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="../js/iframe-load.js"></script>
</head>
<body class="sub-body"> 
<div class="project">
	<p>
		Please click on the links to get a detailed description (including a report/presentation) on the topics.
	</p>
        <h2><a href="desc/gpgpu.htm">Analyzing control dependent inefficiencies in a GPU</a></h2>
        <div>
                <p>
  			Graphics processing units today provide an enormous amount of computing power for data-parallel scientific applications. However, since these were originally designed to run graphics applications, their fundamental architectural features restrict us from using them for general purpose computing. In order to tap the potential of these units, several hardware/software schemes have been proposed in the past. In this project, we examined the different strategies that are adopted to map a general purpose application onto a GPU. Moreover, we quantified the performance loss that arises from this mapping of general purpose applications onto a GPU in the context of branch divergence. We also looked at qualitative differences in segments of these applications which correspond to the underlying algorithm and the adopted mapping respectively in the context of branch behavior.
                </p>
        </div>
        <h2><a href="desc/dip.htm">Single image super resolution</a></h2>
        <div>
                <p>
                        Natural images ten to have significant amount of redundancy both within and across scales. The latter can be used to generate images with larger resolution by mapping recurrent patches on smaller scales with their high-resolution counterparts in the original image. We applied example-based super-resolution to a database of high and low resolution patch vectors generated from a single image to create super-resolution.
                </p>
        </div>
        <h2><a href="desc/hpc1.htm">High performance circuit-simulation on FPGA</a></h2>
        <div>
                <p>
                        SIMD architectures have dominated the field of hardware acceleration for the past decade. Light weight cores are stacked together, performing the same operations on a set of threads in lock-step. However, a large class of parallel programs are inherently MIMD in nature and accelerating them on SIMD architectures, like GPGPU, requires the programmer to manually breakdown the code into serial and kernel code. We took the case of circuit simulation, where each node has its unique Kirchoff's current and voltage equations to be solved and demonstrated that a custom accelerator on an FPGA can possibly surpass the state-of-art accelerators.
                </p>
	</div>
        <h2> *** </h2>
</div>
</body>
</html>
